<!-- Logo Default Colors -->
<li class="form-group">
  <div class="graphic-area hide-colors" id="sidebar-color">
    <% if logo_colors.present? %>
        <%- logo_colors.each_with_index do |val, index|%>
            <%#=render partial: "decorations/colors", locals: {color: val, number: index}%>
          <li class="form-group">
            <div class="graphic-area">
              <div class="color-selection">
                <div id="color_selection" class="color-box default-logo-color" style="background:<%= val %>;" data-logo-layer-id="<%= logo_layer_ids[index] %>"></div><%#=color.try(:colour_code)%>
                <div class="color-number">Color <%=index+1%></div>
                <div class="color-name">
                  <!-- Color will be here from Colors Table Later -->
                </div>
              </div>
            </div>
          </li>
      <%end%>
    <% else %>
      <p>No default colors present.</p>
    <% end %>
  </div>
</li>

<!-- Logo Default Colors -->
<div data-select-logo-layer></div>

<!-- This div contain Logo Svg transform attribute for mirror and rotation -->
<div data-logo-svg-transform-value></div>

<!-- Logo Color Selection -->
<li class="form-group">
  <div class="graphic-area hide-sidebar" id="sidebar-5">
    <%=render partial: "decorations/color_selection", locals: { colors: colors, selected_colors: selected_colors }%>
  </div>
</li>

<!-- Sizes -->

<li class="form-group">
  <label>Sizes</label>
  <select data-max-size="50" id="select-size" class="form-control">
    <option value="">--Select Size--</option>
    <% (1..3).each_with_index do |size, index| %>
        <option value="<%= logo_size[index] %>">Size-<%= size %></option>
    <% end %>
  </select>
</li>

<li class="form-group">
  <label>Mirror</label> |
  <input type="checkbox" value="0" id="mirror-view">
</li>

<li class="form-group">
  <label>Rotate</label>
  <div id="rotate-slider"></div>
</li>
<br />
<script>
  $( function() {
    var rangeSliderElem = document.getElementById('rotate-slider');
    var slider = noUiSlider.create(rangeSliderElem, {
      start: [ 0 ],
      step: 45,
      range: {
        'min': [ 0 ],
        'max': [ 360 ]
      },
      format: wNumb({
        decimals: 0
      })
    });

    $(rangeSliderElem).find('.noUi-handle').text("0");

    slider.on('update', function(values, handle){
      var deg = values[handle];
      var styleSvg = $("#placed-logo-svg-on-style"),
          viewBoxWidth = (styleSvg.prop('viewBox').animVal.width / 2),
          viewBoxHeight = (styleSvg.prop('viewBox').animVal.height / 2),
          styleSvgSelectedAttributes = $('[data-logo-svg-transform-value]'),
          preSetMirrorValue = styleSvgSelectedAttributes.attr('data-mirror-value'),
          styleSvgRotationValue = "rotate("+ parseInt(deg) +" "+ viewBoxWidth +" "+ viewBoxHeight +") ";

      styleSvgSelectedAttributes.attr('data-rotation-value', styleSvgRotationValue);
      $(rangeSliderElem).find('.noUi-handle').text(parseInt(deg));
//
      styleSvgRotationValue += (preSetMirrorValue || "");
      // Rotate Nested SVG so rotate group attribute "g" instead of "svg"
      // for rotation from center we need to set svg viewBox width & height as the rotation x, y values
      // rotate(deg x y)
      styleSvg.find("g:not([id])").first().attr(
          'transform',
          styleSvgRotationValue
      );
    });
  } );
</script>

<style>
  #sizes li a {
    height: auto;
    width: inherit;
    border: inherit;
  }

  #rotate-slider {
    padding: 0px 20px;
    margin: 12px 0px;
  }
  #rotate-slider .noUi-handle {
    text-align: center;
    padding: 3px 0;
  }
  #rotate-slider .noUi-handle:after, .noUi-handle:before {
    content: '';
    width: 0;
  }
</style>

